create table user (
userid varchar(10) primary key, 
pwd varchar(20) not null, 
userName varchar(20) not null,
phone varchar(20), 
email varchar(40), 
major varchar(40) not null, 
userType integer not null);

create table course(
courseNumber varchar(30) not null primary key,
courseName varchar(40) not null,
studentCount integer,
major varchar(40) not null,
professor varchar(10) not null,
foreign key (professor) references user(userId) on delete cascade on update cascade);


create table enroll(
userId varchar(10) not null,
courseNumber varchar(30) not null,
courseStatus integer,

foreign key (userId) references user(userId) on delete cascade on update cascade,

foreign key (courseNumber) references course(courseNumber) on delete cascade on update cascade,

primary key (userId, courseNumber));

create table review(
reviewNo integer not null primary key,
writer varchar(10) not null,
content varchar(10000) not null,
rate integer not null,
time timestamp not null,
courseNumber varchar(30),

foreign key (writer) references user(userId) on delete cascade on update cascade,

foreign key (courseNumber) references course(courseNumber) on delete cascade on update cascade);

create table lecture(
lectureId varchar(20) not null primary key,
courseNumber varchar(30) not null, 
title varchar(100) not null,
explanation varchar(10000),
filePath varchar(100),
hits integer not null,

foreign key (courseNumber) references course(courseNumber) on delete cascade on update cascade
);

create table material(
materialId integer primary key,
lectureId varchar(20) not null,
material varchar(100) not null,

foreign key (lectureId) references lecture(lectureId)
 on delete cascade on update cascade);


create table comments(
commentNo integer primary key,
writer varchar(10) not null,
content varchar(10000) not null,
writeTime timestamp not null,
lectureId varchar(20) not null,

foreign key (writer) references user(userId) 
on delete cascade on update cascade
foreign key (lectureId) references lecture(lectureId) on delete cascade on update cascade);


create table exam(
examNo integer primary key,
courseNumber varchar(30) not null,
chapter integer not null,

foreign key (courseNumber) references course(courseNumber) on delete cascade on update cascade
);

// quizTime 
create table quiz(
quizNo integer primary key,
question varchar(10000) not null,
quizTime varchar(10) not null,
answer integer not null,
explanation varchar(10000),
lectureId varchar(20) not null,

foreign key (lectureId) references lecture(lectureId) on delete cascade on update cascade);

create table quizChoice(
choiceNumber integer,
quizNo integer not null,
 answer varchar(10000) not null,

primary key (choiceNumber, quizNo),
foreign key (quizNo) references quiz(quizNo) on delete cascade on update cascade);

create table question(
questionNo integer primary key,
question varchar(10000) not null,
writer varchar(10) not null,
writeTime timestamp not null,
courseNumber varchar(30) not null,

foreign key (writer) references user(userId) on delete cascade on update cascade,

foreign key (courseNumber) references course(courseNumber) on delete cascade on update cascade);

create table response(
responseNo integer primary key,
writer varchar(10) not null,
writeTime timestamp not null,
content varchar(10000) not null,
questionNo integer not null,

foreign key (writer) references user(userId) on delete cascade on update cascade, 

foreign key (questionNo) references question(questionNo) on delete cascade on update cascade);

create table examQuestion(
examQuestionNo integer not null,
examNo integer not null,
courseNumber varchar(30) not null,
question varchar(10000) not null,
answer integer not null,

foreign key (examNo) references exam(examNo) on delete cascade on update cascade,

foreign key (courseNumber) references course(courseNumber) 
on delete cascade on update cascade,

primary key (examQuestionNo, examNo, courseNumber));

create table examChoice(
examChoiceNo integer not null,
examQuestionNo integer not null,
examNo integer not null,
courseNumber varchar(30) not null,
choice varchar(10000) not null,

foreign key (examQuestionNo) references examQuestion(examQuestionNo) 
on delete cascade on update cascade,

foreign key (examNo) references exam(examNo) 
on delete cascade on update cascade,

foreign key (courseNumber) references course(courseNumber) 
on delete cascade on update cascade,

primary key (examChoiceNo, examQuestionNo, examNo, courseNumber));

create table score(
userId varchar(10) not null,
examNo integer not null,
courseNumber varchar(30) not null,
score integer,

foreign key (userId) references user(userId) on delete cascade on update cascade,

foreign key (examNo) references exam(examNo) on delete cascade on update cascade,

foreign key (courseNumber) references course(courseNumber) on delete cascade on update cascade,

primary key (userId, examNo, courseNumber));

